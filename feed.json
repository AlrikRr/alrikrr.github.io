{
    "version": "https://jsonfeed.org/version/1",
    "title": "AlrikRr&#x27;s Blog",
    "description": "",
    "home_page_url": "https://alrikrr.github.io",
    "feed_url": "https://alrikrr.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "AlrikRr"
    },
    "items": [
        {
            "id": "https://alrikrr.github.io/incyber-forum-international-cyber-2023/",
            "url": "https://alrikrr.github.io/incyber-forum-international-cyber-2023/",
            "title": "InCyber Forum North America 2023",
            "summary": "Yes, I know this post is coming a bit late, but I had to get it out anyway. I had&hellip;",
            "content_html": "\n  <p>\n    Yes, I know this post is coming a bit late, but I had to get it out anyway.\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://alrikrr.github.io/media/posts/36/bn.jpeg\" height=\"378\" width=\"1026\" alt=\"\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/36/responsive/bn-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/36/responsive/bn-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/36/responsive/bn-md.jpeg 768w\">\n      \n    </figure>\n\n    <h1 id=\"my-first-talk\">\n      My First Talk\n    </h1>\n\n  <p>\n    I had the opportunity to present this year at FIC North America in Montreal, focusing on the latest developments in the Hacking Lab, a specialized stage in offensive security! It was my first presentation and, moreover, it was in English!\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://alrikrr.github.io/media/posts/36/bn_link-2.jpeg\" height=\"350\" width=\"1400\" alt=\"\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/36/responsive/bn_link-2-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/36/responsive/bn_link-2-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/36/responsive/bn_link-2-md.jpeg 768w\">\n      \n    </figure>\n\n  <p>\n    Thanks, Dorota, for the pictures! :D\n  </p>\n\n  <p>\n    My presentation aimed to discuss hardware hacking on embedded systems, a topic I find fascinating even though it's not my specialty. Who knows, maybe in the future? My talk was very geared towards those who want to embark on the adventure, providing the basics and the necessary equipment to gain shell access to a device. During this presentation, I used an old TP-Link router as an example, connecting to the URAT port to gain access. My Flipper Zero was useful for creating a USB to UART bridge.\n  </p>\n\n  <p>\n    Besides my presentation, it was a very interesting event. I had the chance to meet up with my cyber friends and make new ones!<br>\n  </p>\n\n    <h2 id=\"resourcesandnbsp\">\n      Resources&nbsp;\n    </h2>\n\n  <p>\n    Don't hesitate to download the slides, available here : <a href=\"https://github.com/AlrikRr/Talks\" target=\"_blank\">Github-AlrikRr-Talks&nbsp;</a>\n  </p>\n\n  <p>\n    The videos are also available here : <a href=\"https://youtu.be/YebuNIlfjYY?si=gEnqG4UpJAKrrrMK\" target=\"_blank\">Hardware Hacking - Playlist</a>\n  </p>\n<div><div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YebuNIlfjYY?si=5SpRpAU-e_yghOxf\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe></div></div>\n\n  <p>\n    Unfortunately, the presentation wasn't recorded, but it won't be the last for those who&nbsp;like to attend.\n  </p>\n\n    <h1 id=\"hacker-without-borders\">\n      Hacker Without Borders\n    </h1>\n\n  <p>\n    I discovered the NGO Hacker Without Borders and spoke with their representatives. I applied in the evening, now I just have to wait for the North America chapter to open its doors to embark on the adventure!\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://alrikrr.github.io/media/posts/36/fine-2.jpeg\" height=\"1024\" width=\"887\" alt=\"\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/36/responsive/fine-2-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/36/responsive/fine-2-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/36/responsive/fine-2-md.jpeg 768w\">\n      \n    </figure>\n\n    <h1 id=\"thanks\">\n      Thanks !\n    </h1>\n\n  <p>\n    I would like to thank Vincent Rioux once again for the invitation to present this year! As I mentioned, it was my first presentation, and it was intense—the room was packed! Thank you to those who attended the presentation. It won't be the last; I have other topics in mind to share with you.\n  </p>\n\n    <h2 id=\"linkedin-related-posts\">\n      LinkedIn Related Posts\n    </h2>\n<div><div class=\"post__iframe\"><iframe loading=\"lazy\" src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:7119702686660222976\" height=\"439\" width=\"504\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe></div></div>\n\n  <p>\n    <a href=\"https://www.linkedin.com/posts/adrien-lasalle_fic-fic-forumcyber-activity-7123437004209426432-ubnS?utm_source=share&amp;utm_medium=member_desktop\" target=\"_blank\">FIC FeedBack !&nbsp;</a>\n  </p>\n<div><div class=\"post__iframe\"><iframe loading=\"lazy\" src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:7122279607260565507\" height=\"421\" width=\"504\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe></div></div>\n<div><div class=\"post__iframe\"><iframe loading=\"lazy\" src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:7124787293256609792\" height=\"355\" width=\"504\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe></div></div>\n\n  <p>\n    \n  </p>",
            "image": "https://alrikrr.github.io/media/posts/36/update-banner-new.png",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Updates"
            ],
            "date_published": "2023-10-28T19:13:55-04:00",
            "date_modified": "2023-12-16T10:54:47-05:00"
        },
        {
            "id": "https://alrikrr.github.io/1-gba-sp-battery-change/",
            "url": "https://alrikrr.github.io/1-gba-sp-battery-change/",
            "title": "#1 GBA SP - Battery Change",
            "summary": "Hello, everyone! I hope you're doing well? Today, I'm bringing you a series of articles that will gradually appear on&hellip;",
            "content_html": "\n  <p>\n    Hello, everyone! I hope you're doing well?<br><br>Today, I'm bringing you a series of articles that will gradually appear on my blog. These articles will revolve around the modification of my Gameboy Advance SP, which I recently rediscovered among my belongings! This little gem is now 20 years old and still works fairly well, with not too much damage.<br>\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://alrikrr.github.io/media/posts/35/gba-1.jpeg\" height=\"2048\" width=\"1536\" alt=\"\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/35/responsive/gba-1-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/35/responsive/gba-1-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/35/responsive/gba-1-md.jpeg 768w\">\n      \n    </figure>\n\n  <p>\n    Unfortunately, this beauty is showing some signs of wear and tear and isn't quite up to modern standards. That's why I'm planning to implement some modifications such as:\n  </p>\n\n  <p>\n    - A new battery<br>- New protective shells<br>- A new IPS screen<br>- USB-C connection for charging<br>- Sound amplification<br>\n  </p>\n\n    <h1 id=\"new-battery\">\n      🔋 New Battery\n    </h1>\n\n  <p>\n    I'm kicking off this series of articles with something simple – the replacement of the original battery. After 20 years of use, I currently get about 2 hours of battery life, which is actually quite impressive. They don't make them like this anymore!<br>\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://alrikrr.github.io/media/posts/35/gba-2.jpeg\" height=\"2048\" width=\"1536\" alt=\"\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/35/responsive/gba-2-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/35/responsive/gba-2-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/35/responsive/gba-2-md.jpeg 768w\">\n      \n    </figure>\n\n  <p>\n    The new one is coming from&nbsp;<a href=\"https://www.retromodding.com/\" target=\"_blank\">Retro Modding</a>&nbsp;, its a 900 mAh battery, here is the link if you are interested :&nbsp;\n  </p>\n\n  <p>\n    <a href=\"https://www.retromodding.com/products/makho-game-boy-advance-sp-battery?variant=36494280982684\" target=\"_blank\">-&nbsp;https://www.retromodding.com/products/makho-game-boy-advance-sp-battery?variant=36494280982684</a>\n  </p>\n\n  <p>\n    It's coming with a pretty nice 3D printed shell and a + - contact PCB, already soldered to the battery. You can compare it with the old one on the top.\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://alrikrr.github.io/media/posts/35/gba-3.jpeg\" height=\"2048\" width=\"1536\" alt=\"\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/35/responsive/gba-3-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/35/responsive/gba-3-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/35/responsive/gba-3-md.jpeg 768w\">\n      \n    </figure>\n\n  <p>\n    The battery itself fits perfectly within the GBA SP, and when it comes to the incoming parts like the Clear White Shell module, it's going to look fantastic! 🎮👌\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://alrikrr.github.io/media/posts/35/gba-4.jpeg\" height=\"2048\" width=\"1536\" alt=\"\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/35/responsive/gba-4-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/35/responsive/gba-4-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/35/responsive/gba-4-md.jpeg 768w\">\n      \n    </figure>\n\n  <p>\n    The next step is to purchase a soldering iron, the IPS screen, and the protective shell. 🛠️\n  </p>",
            "image": "https://alrikrr.github.io/media/posts/35/Retro-Gaming2.png",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Retro Modding"
            ],
            "date_published": "2023-10-01T13:53:41-04:00",
            "date_modified": "2023-10-01T14:20:51-04:00"
        },
        {
            "id": "https://alrikrr.github.io/invalide-device-flipperzero-repair/",
            "url": "https://alrikrr.github.io/invalide-device-flipperzero-repair/",
            "title": "Invalid Device - FlipperZero Repair ",
            "summary": "If, like me, you enjoy playing with your flipper and happen to install a somewhat unstable custom firmware, you might&hellip;",
            "content_html": "<p>If, like me, you enjoy playing with your flipper and happen to install a somewhat unstable custom firmware, you might find yourself faced with this error message on your qFlipper Application. It becomes impossible to update your firmware, whether through the qFlipper GUI or the web interface!<br><br>No need to panic—I have a solution! Well, there's probably a simpler way to do it, but this one works! 😄</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/34//invalide.png\" alt=\"\" width=\"1724\" height=\"1064\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/34//responsive/invalide-xs.png 300w ,https://alrikrr.github.io/media/posts/34//responsive/invalide-sm.png 480w ,https://alrikrr.github.io/media/posts/34//responsive/invalide-md.png 768w\"></figure>\n<h2>Turn on DFU mode</h2>\n<p>First you'll need to turn your flipper into DFU mode by doing this steps from the official Flipper Wiki, here is the link:</p>\n<p>- <a href=\"https://docs.flipper.net/basics/firmware-update/firmware-recovery#2vuS0\">https://docs.flipper.net/basics/firmware-update/firmware-recovery#2vuS0</a> </p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/34/dfu.png\" alt=\"\" width=\"2556\" height=\"936\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/34/responsive/dfu-xs.png 300w ,https://alrikrr.github.io/media/posts/34/responsive/dfu-sm.png 480w ,https://alrikrr.github.io/media/posts/34/responsive/dfu-md.png 768w\"></figure>\n<h2>Clone and build</h2>\n<p>Once your friend is in DFU, you'll need to dowload the firmware source and build everything, here are my linux commands:</p>\n<p><code>git clone <a href=\"https://github.com/flipperdevices/flipperzero-firmware.git\">https://github.com/flipperdevices/flipperzero-firmware.git</a></code><br><code>cd flipperzero-firmware</code><br><code>./ftb</code></p>\n<p>Just wait a few minutes and you should see this screen, note were the firmware is stored, you'll need that for later</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/34//build-new-firmware.png\" alt=\"\" width=\"880\" height=\"444\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/34//responsive/build-new-firmware-xs.png 300w ,https://alrikrr.github.io/media/posts/34//responsive/build-new-firmware-sm.png 480w ,https://alrikrr.github.io/media/posts/34//responsive/build-new-firmware-md.png 768w\"></figure>\n<h2>Setup Rules</h2>\n<p>Next step is to update the qFlipper Rules, download the github repo and execute the script</p>\n<pre>git clone <a href=\"https://github.com/flipperdevices/qFlipper.git\">https://github.com/flipperdevices/qFlipper.git</a><br><br>cd qFlipper<br><br>chmod +x setup_rules.sh<br><br>./setup_rules.sh</pre>\n<h2>Install from file</h2>\n<p>Now you can restart your qFlipper application and select the firmware file like below</p>\n<figure class=\"post__image post__image--full\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/34//install-from-files.png\" alt=\"\" width=\"1847\" height=\"724\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/34//responsive/install-from-files-xs.png 300w ,https://alrikrr.github.io/media/posts/34//responsive/install-from-files-sm.png 480w ,https://alrikrr.github.io/media/posts/34//responsive/install-from-files-md.png 768w\"></figure>\n<p>Just wait a bit until your Flipper is fully updated, then upgrade it again using the qFlipper app by pressing the Green Button !</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/34/Screenshot-20230915-104512.png\" alt=\"\" width=\"512\" height=\"256\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/34/responsive/Screenshot-20230915-104512-xs.png 300w ,https://alrikrr.github.io/media/posts/34/responsive/Screenshot-20230915-104512-sm.png 480w ,https://alrikrr.github.io/media/posts/34/responsive/Screenshot-20230915-104512-md.png 768w\"></figure>\n<p>Enjoy !</p>\n<p> </p>",
            "image": "https://alrikrr.github.io/media/posts/34/FlipperZero.jpg",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "FlipperZero"
            ],
            "date_published": "2023-09-15T10:14:31-04:00",
            "date_modified": "2023-09-15T11:02:57-04:00"
        },
        {
            "id": "https://alrikrr.github.io/blog-issue/",
            "url": "https://alrikrr.github.io/blog-issue/",
            "title": "IMPORTANT : Blog Issue",
            "summary": "Hi There ! Just to let you know that most of the pictures from the articles on my website are&hellip;",
            "content_html": "<p>Hi There !</p>\n<p>Just to let you know that most of the pictures from the articles on my  website are broken at the moment !</p>\n<p>I'll try to fix that soon! Sorry for any inconvenience caused.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/33/7z21s3.gif\" alt=\"\" width=\"260\" height=\"326\"></figure>",
            "image": "https://alrikrr.github.io/media/posts/33/Issue-Banner.jpg",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Updates"
            ],
            "date_published": "2023-09-13T18:45:03-04:00",
            "date_modified": "2023-09-15T11:16:43-04:00"
        },
        {
            "id": "https://alrikrr.github.io/thinkpad-t470-fingerprint-working-linux/",
            "url": "https://alrikrr.github.io/thinkpad-t470-fingerprint-working-linux/",
            "title": "Thinkpad T470 - Fingerprint Sensor Setup",
            "summary": "Hello everyone, today's tutorial can be helpful for those who struggle with using and getting the fingerprint device to work&hellip;",
            "content_html": "<p>Hello everyone, today's tutorial can be helpful for those who struggle with using and getting the fingerprint device to work on their Thinkpad when running a Linux system!<br><br>On my end, I'm using a<strong> Thinkpad T470 </strong>with a brand new SSD, and I've got <strong>PopOs</strong> installed – it's running like a charm!</p>\n<p>Most of the commands can be found using the python-validity github repo right there</p>\n<ul>\n<li><a href=\"https://github.com/uunicorn/python-validity\" target=\"_blank\" rel=\"noopener noreferrer\">python-validity github link</a></li>\n</ul>\n<h1>Update apt repo</h1>\n<p>Since i'm using a ubuntu-like system i'll be using the ubuntu commands, feel free to check the github repo for other linux systems</p>\n<pre class=\"notranslate\"><code>$ sudo apt remove fprintd\n$ sudo add-apt-repository ppa:uunicorn/open-fprintd\n$ sudo apt-get update\n$ sudo apt install open-fprintd fprintd-clients python3-validity\n$ fprintd-enroll</code></pre>\n<h1>Enroll new fingerprint</h1>\n<p>Now if you don´t have any error, you should be able to register your fingerprint using the command <code>fprintd-enroll</code> and press your finger to the fingerprint device multiple times until you get the message <code>Enroll result: enroll-completed</code></p>\n<figure class=\"post__image\"><code></code><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/32/fprintd-enroll.png\" alt=\"Enroll-Print\" width=\"526\" height=\"279\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/32/responsive/fprintd-enroll-xs.png 300w ,https://alrikrr.github.io/media/posts/32/responsive/fprintd-enroll-sm.png 480w ,https://alrikrr.github.io/media/posts/32/responsive/fprintd-enroll-md.png 768w\"></figure>\n<h2>Error list_devices failed:</h2>\n<p>Now, if, like me, it doesn't work the first time, well, that's okay – nobody's perfect</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/32/error-enroll.png\" alt=\"\" width=\"313\" height=\"53\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/32/responsive/error-enroll-xs.png 300w ,https://alrikrr.github.io/media/posts/32/responsive/error-enroll-sm.png 480w ,https://alrikrr.github.io/media/posts/32/responsive/error-enroll-md.png 768w\"></figure>\n<p>If you check your python3-validity.service it should show you an error</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/32/error-systemctl.png\" alt=\"\" width=\"1510\" height=\"414\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/32/responsive/error-systemctl-xs.png 300w ,https://alrikrr.github.io/media/posts/32/responsive/error-systemctl-sm.png 480w ,https://alrikrr.github.io/media/posts/32/responsive/error-systemctl-md.png 768w\"></figure>\n<p>You just need to do a factory reset of your fingerprint device using the command below</p>\n<p><code></code></p>\n<pre class=\"notranslate\"><code>$ sudo systemctl stop python3-validity\n$ sudo validity-sensors-firmware\n$ sudo python3 /usr/share/python-validity/playground/factory-reset.py</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/32/factory-reset.png\" alt=\"\" width=\"1200\" height=\"450\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/32/responsive/factory-reset-xs.png 300w ,https://alrikrr.github.io/media/posts/32/responsive/factory-reset-sm.png 480w ,https://alrikrr.github.io/media/posts/32/responsive/factory-reset-md.png 768w\"></figure>\n<p>Now you should be able to start the python3-validy.service and enrolling your new fingerprint !</p>\n<h1>PAM enable</h1>\n<p>Before doing anything else, you want to enable the dinger-print device to unlock your session or using your finger to run a sudo command !</p>\n<p>Do to so you'll need to update the PAM rules using </p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\">\n<pre class=\"notranslate\"><code>$ sudo pam-auth-update\n</code></pre>\n<div class=\"zeroclipboard-container position-absolute right-0 top-0\"><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/32/pam-update.png\" alt=\"\" width=\"1883\" height=\"526\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/32/responsive/pam-update-xs.png 300w ,https://alrikrr.github.io/media/posts/32/responsive/pam-update-sm.png 480w ,https://alrikrr.github.io/media/posts/32/responsive/pam-update-md.png 768w\"></figure></div>\n</div>\n<p>Here are the first lines of my <code>/etc/pam.d/common-auth</code> file</p>\n<pre>auth    [success=2 default=ignore]    pam_fprintd.so max_tries=1 timeout=10 # debug<br>auth    [success=1 default=ignore]    pam_unix.so try_first_pass nullok_secure</pre>\n<p>Now your sensor should be working. Perhaps a reboot wouldn't hurt to ensure everything is functioning correctly!</p>\n<p> </p>",
            "image": "https://alrikrr.github.io/media/posts/32/linux-banner.jpg",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Linux"
            ],
            "date_published": "2023-09-12T17:21:38-04:00",
            "date_modified": "2023-09-13T18:11:28-04:00"
        },
        {
            "id": "https://alrikrr.github.io/my-pnpt-feedback/",
            "url": "https://alrikrr.github.io/my-pnpt-feedback/",
            "title": "My PNPT FeedBack",
            "summary": "Hi! Today I’m going to share with you my feedback on the PNPT certification that I passed at the beginning&hellip;",
            "content_html": "<p>Hi! Today I’m going to share with you my feedback on the PNPT certification that I passed at the beginning of August 2023 by reviewing the before and during the exam!</p>\n<hr>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#my-knowledge\">My Knowledge</a></li>\n<li><a href=\"#mcetoc_1h7tmfdnggn\">PNPT &amp; Package Course</a></li>\n<li><a href=\"#mcetoc_1h7tmfdnggo\">Exam Period - 5 Days</a>\n<ul>\n<li><a href=\"#mcetoc_1h7tmfdnggp\">Exam Skills</a></li>\n<li><a href=\"#mcetoc_1h7tmfdnggq\">Exam Package</a></li>\n<li><a href=\"#mcetoc_1h7tmfdnggr\">My Exam</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1h7tmfdnggs\">Report Period - 2 days</a></li>\n<li><a href=\"#mcetoc_1h7tmfdnggt\">Final Presentation</a></li>\n</ul>\n</div>\n<h1 id=\"my-knowledge\">My Background</h1>\n<p>Before we dive deeper, let me clarify my experience since I see few people talking about their skills before starting the examination. I have 4 years of experience in the field of computer security, with 2 actual years spent as a Pentester. I frequently practice at home, as well as during missions conducting intrusion tests on both internal and external client environments. Moreover, report writing is no longer a mysterious art for me. So, I’m embarking on this certification with a significant advantage compared to someone new to this field. 🛡️</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/2/pnpt-2.jpeg\" alt=\"\" width=\"468\" height=\"297\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/2/responsive/pnpt-2-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/2/responsive/pnpt-2-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/2/responsive/pnpt-2-md.jpeg 768w\"></figure>\n<h1 id=\"mcetoc_1h7tmfdnggn\">PNPT &amp; Package Course</h1>\n<p>Before purchasing the PNPT courses and voucher, it’s essential to note that the two exam vouchers do not have an expiration date. The courses are available on the Academic TCM-Security platform, and you’ll be provided with five courses, along with their completion percentages, to give you an idea of what I’ve gone through so far:</p>\n<ul>\n<li>Practical Ethical Hacking - The Complete Course <strong>94%</strong></li>\n<li>Windows Privilege Escalation for Beginners <strong>75%</strong></li>\n<li>Linux Privilege Escalation for Beginners <strong>0%</strong></li>\n<li>Open-Source Intelligence (OSINT) Fundamentals <strong>0%</strong></li>\n<li>External Pentest Playbook <strong>0%</strong></li>\n</ul>\n<p>Additionally, you’ll have access to VODs of Twitch live sessions:</p>\n<ul>\n<li>PNPT Live Training VOD <strong>0%</strong></li>\n</ul>\n<p class=\"msg msg--warning\">Please note that just because I haven’t finished all the courses doesn’t mean you should follow suit. As I mentioned earlier, I’m starting with an advantage.</p>\n<h1 id=\"mcetoc_1h7tmfdnggo\">Exam Period - 5 Days</h1>\n<p>It’s go-time! You’ve set up your Kali Linux virtual machine, and the countdown has begun!</p>\n<p>You’ve got 5 days to conquer this examination, which means compromising both the external and internal scope, “securing” that Domain Admin access to the Domain Controller! All’s fair in this quest, but just remember, you’ll be following a step-by-step process, just like on a genuine pentesting engagement with a client. So, no DDOS or other disruptions – they could spell the end of your exam period!</p>\n<h2 id=\"mcetoc_1h7tmfdnggp\">Exam Skills</h2>\n<p>If I can offer you a few tips on the areas to review and master before taking the exam, here they are:</p>\n<ul>\n<li>OSINT (Open-Source Intelligence)</li>\n<li>Web Application Pentesting</li>\n<li>Pivoting and Proxychains</li>\n<li>Active Directory Pentesting</li>\n<li>Enumeration, Enumeration, ENUMERATION!</li>\n</ul>\n<h2 id=\"mcetoc_1h7tmfdnggq\">Exam Package</h2>\n<p>Regarding your Exam Package, you’ll receive a PDF document containing your scope and instructions from your client. You can also make use of the password wordlists kindly provided by TCM (it’ll make your life easier!).</p>\n<p>Lastly, you’ll receive your VPN access for the lab and the option to revert or stop the lab whenever you want. This won’t affect the lab’s configuration or the exam duration.</p>\n<h2 id=\"mcetoc_1h7tmfdnggr\">My Exam</h2>\n<p>As for me, I faced a few challenges during the enumeration phase. I won’t say more to avoid spoiling anything! The attacks weren’t overly difficult; they’re entirely manageable even for beginners if you follow the courses provided by TCM.</p>\n<p>Still, it’s a lab exam that somewhat mirrors reality, even though everything is designed to give you hints about where to look and what to do without causing too many issues.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/2/meme-0.jpg\" alt=\"Private PNPT joke\" width=\"369\" height=\"298\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/2/responsive/meme-0-xs.jpg 300w ,https://alrikrr.github.io/media/posts/2/responsive/meme-0-sm.jpg 480w ,https://alrikrr.github.io/media/posts/2/responsive/meme-0-md.jpg 768w\"></figure>\n<h1 id=\"mcetoc_1h7tmfdnggs\">Report Period - 2 days</h1>\n<p>When it comes to the report writing phase, it’s also nothing overly complicated. I can only advise you to capture screenshots BEFORE your exam period ends!</p>\n<p>As for what I did, I took notes on the vulnerabilities I discovered and how to exploit them. It’s important to provide Proof of Concepts (PoCs) but also suggestions for fixing them. Remember, this report is intended for a client, so write it accordingly. Include both the technical and executive aspects.</p>\n<p>My report ended up being a total of 60 pages. I can list the main headings for you to give you an idea of the content, in case it helps inspire you!</p>\n<ul>\n<li>Objective &amp; Context</li>\n<li>Scope</li>\n<li>Server Discovery</li>\n<li>Testing Methodology</li>\n<li>Score &amp; Severity</li>\n<li>Executive Summary</li>\n<li>Vulnerability Summary</li>\n<li>Remediation Summary</li>\n<li>Attack Paths</li>\n<li>Technical Details (Vulnerability Details and PoCs)</li>\n</ul>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/2/meme-1.jpeg\" alt=\"\" width=\"517\" height=\"499\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/2/responsive/meme-1-xs.jpeg 300w ,https://alrikrr.github.io/media/posts/2/responsive/meme-1-sm.jpeg 480w ,https://alrikrr.github.io/media/posts/2/responsive/meme-1-md.jpeg 768w\"></figure>\n<h1 id=\"mcetoc_1h7tmfdnggt\">Final Presentation</h1>\n<p>Aside from the technical hiccups at the beginning of the presentation (well, you can’t really hide the chaos, can you…), it was quite swift – no more than 15 minutes – with a few questions from the examiner. On my end, I jumped right into presenting the English PDF report (with my French Baguette accent).</p>\n<p>The atmosphere was friendly, with no pressure as long as you’re confident in your subject! The advantage is that the examiner will give you the final verdict right away, letting you know if you’ve earned your certification or not.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/2/pnpt-3.gif\" alt=\"\" width=\"360\" height=\"225\"></figure>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/2/pnpt-4.gif\" alt=\"\" width=\"360\" height=\"202\"></figure>\n<div id=\"post-content\" class=\"post-content\">\n<p>It’s still a great experience with TCM-Security. If you have any questions, I can answer them without revealing the exam’s content. As for me, I’m leaning towards the next certification in Malware Analysis, PJMR!</p>\n</div>\n<div class=\"row pl-3 pr-3\"> </div>",
            "image": "https://alrikrr.github.io/media/posts/2/my-cert.jpg",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Updates"
            ],
            "date_published": "2023-08-15T18:53:27-04:00",
            "date_modified": "2023-08-15T19:11:58-04:00"
        },
        {
            "id": "https://alrikrr.github.io/9-nsec21-toms-hut-part2/",
            "url": "https://alrikrr.github.io/9-nsec21-toms-hut-part2/",
            "title": "#9 Nsec21 - Tom&#x27;s Hut part2",
            "summary": "If you want to fully understand this post I can only recommand you to read the previous one (Flag 8&hellip;",
            "content_html": "<p>If you want to fully understand this post I can only recommand you to read the previous one (Flag 8 part1)</p>\n<h1 id=\"re102-reverse\">RE102 Reverse</h1>\n<p>Like the previous one, the architecture is Xtensa, but this time I already have the right module for Ghidra !</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/25/xtensa_elf.png\" alt=\"\" width=\"1351\" height=\"253\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/25/responsive/xtensa_elf-xs.png 300w ,https://alrikrr.github.io/media/posts/25/responsive/xtensa_elf-sm.png 480w ,https://alrikrr.github.io/media/posts/25/responsive/xtensa_elf-md.png 768w\"></figure>\n<p>Using Ghidra I’m doing the import and the analysis of the binary.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/25/ghidra_import.png\" alt=\"\" width=\"544\" height=\"315\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/25/responsive/ghidra_import-xs.png 300w ,https://alrikrr.github.io/media/posts/25/responsive/ghidra_import-sm.png 480w ,https://alrikrr.github.io/media/posts/25/responsive/ghidra_import-md.png 768w\"></figure>\n<h1 id=\"app-main\">App Main</h1>\n<p>The <code>app_main</code> function is very similar to <code>RE101</code>, so this time let’s jump on the <code>verify</code> function !</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/25/app_main-2.png\" alt=\"\" width=\"925\" height=\"529\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/25/responsive/app_main-2-xs.png 300w ,https://alrikrr.github.io/media/posts/25/responsive/app_main-2-sm.png 480w ,https://alrikrr.github.io/media/posts/25/responsive/app_main-2-md.png 768w\"></figure>\n<h2 id=\"verify\">Verify</h2>\n<p>This time its different, as we can see the user input is stored inside <code>user_code</code> and the check is done using <code>a8</code> registry.<br>In the first example, the first element of the input is checked with <code>0x66</code> which is a <code>f</code>.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/25/verify_stuff.png\" alt=\"\" width=\"802\" height=\"418\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/25/responsive/verify_stuff-xs.png 300w ,https://alrikrr.github.io/media/posts/25/responsive/verify_stuff-sm.png 480w ,https://alrikrr.github.io/media/posts/25/responsive/verify_stuff-md.png 768w\"></figure>\n<p>We just need to jump into each function and check which element is checked and with which character.</p>\n<h1 id=\"flag\">Flag</h1>\n<p>The final FLAG is<code>f219e6cdb1fa4a48b160d00d61118f93</code></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/25/flag.png\" alt=\"\" width=\"687\" height=\"127\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/25/responsive/flag-xs.png 300w ,https://alrikrr.github.io/media/posts/25/responsive/flag-sm.png 480w ,https://alrikrr.github.io/media/posts/25/responsive/flag-md.png 768w\"></figure>",
            "image": "https://alrikrr.github.io/media/posts/25/nsec-Badge.jpg",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Write Up",
                   "BadgeLife"
            ],
            "date_published": "2023-04-08T21:53:00-04:00",
            "date_modified": "2023-09-13T18:50:22-04:00"
        },
        {
            "id": "https://alrikrr.github.io/8-nsec21-toms-hut-part1/",
            "url": "https://alrikrr.github.io/8-nsec21-toms-hut-part1/",
            "title": "#8 Nsec21 - Tom&#x27;s Hut part1",
            "summary": "The next 2 Flags are binary reverse, I was very very rusty on this one … So, this challenge is&hellip;",
            "content_html": "<p>The next 2 Flags are binary reverse, I was very very rusty on this one …</p>\n<h1 id=\"wi-fi-join\">Wi-Fi Join</h1>\n<p>So, this challenge is accessible from Tom’s Hut after you have joined a Wi-Fi network !</p>\n<p>To join a Wi-Fi network, you need to access the serial port using <code>screen</code> (check Chall 7 !) and use the following command:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/wifi-connect.png\" alt=\"\" width=\"1009\" height=\"149\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/wifi-connect-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/wifi-connect-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/wifi-connect-md.png 768w\"></figure>\n<p>You should receive an IP, you can now go to Tom’s Hut and see the following message !</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/Screenshot-from-2023-04-20-16-30-56.png\" alt=\"\" width=\"941\" height=\"837\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/Screenshot-from-2023-04-20-16-30-56-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/Screenshot-from-2023-04-20-16-30-56-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/Screenshot-from-2023-04-20-16-30-56-md.png 768w\"></figure>\n<p>Download both of the binaries, RE101 and RE102.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/download-re-2.png\" alt=\"\" width=\"392\" height=\"171\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/download-re-2-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/download-re-2-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/download-re-2-md.png 768w\"></figure>\n<h1 id=\"re101---reverse\">RE101 - Reverse</h1>\n<p>The first binary named <code>re101.elf</code> is a binary using Xtensa architecture.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/re101-elf.png\" alt=\"\" width=\"1352\" height=\"88\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/re101-elf-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/re101-elf-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/re101-elf-md.png 768w\"></figure>\n<h2 id=\"xtensa-processor\">Xtensa Processor</h2>\n<p>I can´t execute it on my machine so I’ll use Ghidra to dissas and take a look inside.</p>\n<p>Unfortunately Ghidra can’t understand Xtensa binaries by default, so I need to add an extra Processor, here is the github link</p>\n<ul>\n<li><a href=\"https://github.com/yath/ghidra-xtensa\">Xtensa Arch - Github</a></li>\n</ul>\n<p>The install is explained inside the README.md but becarefull to gve your user the full ownership of the xtensa folder.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/ghidra-xtensa.png\" alt=\"\" width=\"580\" height=\"346\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/ghidra-xtensa-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/ghidra-xtensa-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/ghidra-xtensa-md.png 768w\"></figure>\n<p>Now the binary is recognized, we can analyse it and reverse it !</p>\n<h2 id=\"main-function\">Main function</h2>\n<p>The main function is easly located in the ghidra function folder.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/main_func.png\" alt=\"\" width=\"1231\" height=\"410\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/main_func-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/main_func-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/main_func-md.png 768w\"></figure>\n<p>As we can see, this function accept a user input and then check this input with <code>verify</code> function. Depending of the user input, the <code>verify</code>function will display the flag or not.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/main_fun_full.png\" alt=\"\" width=\"869\" height=\"467\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/main_fun_full-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/main_fun_full-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/main_fun_full-md.png 768w\"></figure>\n<h2 id=\"verify-\">Verify !</h2>\n<p>The main function won´t give us more information so let’s dig into <code>verify</code>function !</p>\n<p>This one is a bit tricky but after half an hour, I sort of understand how it works.</p>\n<p>So, the user input in <code>a1</code> is checked characters by charaters but not in the right order.<br>The characters that are compared are stored inside <code>a3</code>, <code>a8</code> etc. and the value of these registers are changing during the execution of the binary.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/verify_code.png\" alt=\"\" width=\"550\" height=\"765\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/verify_code-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/verify_code-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/verify_code-md.png 768w\"></figure>\n<p>I was a bit lazy on this one and used a notepad to check characters by characters the user input and then found the FLAG.</p>\n<p>Here is the correct order for each check.</p>\n<p>So you have the value <code>a</code> something with the affected value using <code>movi</code>. Then the <code>Stack</code> whith the position of the letter checked inside the user input and it’s value.</p>\n<div class=\"highlight\">\n<pre tabindex=\"0\"><code class=\"language-text\" data-lang=\"text\">        400e4248 36 41 01        entry      a1 = 'u'\n        400e424b c2 a0 63        movi       a12 = 'c'\n        400e424e c2 61 15        s32i       a12,a1,0x54=&gt;Stack[0x54] ---&gt; 22 = c\n        400e4251 82 a0 62        movi       a8 = 'b' \n        400e4254 82 61 10        s32i       a8,a1,0x40=&gt;Stack[0x40]  ---&gt; 17 = b\n        400e4257 3c 4e           movi.n     a14 = '4'\n        400e4259 e9 a1           s32i.n     a14,a1,0x28=&gt;Stack[0x28]  ---&gt; 11 = 4\n        400e425b 3c 3b           movi.n     a11 = '3'\n        400e425d b2 61 12        s32i       a11,a1,0x48=&gt;Stack[0x48] ---&gt; 19 = 3\n        400e4260 3c 83           movi.n     a3 = '8'\n        400e4262 32 61 18        s32i       a3,a1,0x60=&gt;Stack[0x60]  ---&gt; 25 = 8\n        400e4265 82 61 19        s32i       a8,a1,0x64=&gt;Stack[0x64]  ---&gt; 26 = b \n        400e4268 3c 2a           movi.n     a10 = '2'\n        400e426a a9 51           s32i.n     a10,a1,0x14=&gt;Stack[0x14] ---&gt; 6 = 2\n        400e426c 3c 18           movi.n     a8 = '1'\n        400e426e 89 01           s32i.n     a8,a1=&gt;Stack[0x0],0x0     ----&gt; 1  = 1\n        400e4270 a2 61 17        s32i       a10,a1,0x5c=&gt;Stack[0x5c]  ---&gt; 24 = 2 \n        400e4273 82 61 16        s32i       a8,a1,0x58=&gt;Stack[0x58] ---&gt; 23 = 1\n        400e4276 3c 7f           movi.n     a15 = '7'\n        400e4278 f2 61 1d        s32i       a15,a1,0x74=&gt;Stack[0x74]  ---&gt; 30 = 7 \n        400e427b 3c 9d           movi.n     a13 = '9'\n        400e427d d9 31           s32i.n     a13,a1,0xc=&gt;Stack[0xc]    ----&gt; 4 = 9 \n        400e427f 82 61 13        s32i       a8,a1,0x4c=&gt;Stack[0x4c]  ----&gt; 20 = 1 \n        400e4282 92 a0 61        movi       a9 = 'a'\n        400e4285 99 21           s32i.n     a9,a1,0x8=&gt;Stack[0x8]   ------&gt; 3 = a\n        400e4287 92 a0 65        movi       a9 = 'e'\n        400e428a 99 f1           s32i.n     a9,a1,0x3c=&gt;Stack[0x3c]  ---&gt; 16 = e \n        400e428c 82 61 11        s32i       a8,a1,0x44=&gt;Stack[0x44]  ---&gt; 18 = 1 \n        400e428f 89 11           s32i.n     a8,a1,0x4=&gt;Stack[0x4]    -----&gt; 2 = 1\n        400e4291 89 61           s32i.n     a8,a1,0x18=&gt;Stack[0x18]  ---&gt; 7 = 1 \n        400e4293 3c 09           movi.n     a9 = '0'\n        400e4295 92 61 1f        s32i       a9,a1,0x7c=&gt;Stack[0x7c] ---&gt; 32 = 0\n        400e4298 3c 69           movi.n     a9 = '6'\n        400e429a 99 e1           s32i.n     a9,a1,0x38=&gt;Stack[0x38]  ---&gt; 15 = 6 \n        400e429c a9 41           s32i.n     a10,a1,0x10=&gt;Stack[0x10] ---&gt; 5 = 2 \n        400e429e 39 71           s32i.n     a3,a1,0x1c=&gt;Stack[0x1c]  ---&gt; 8 = 8\n        400e42a0 92 61 1b        s32i       a9,a1,0x6c=&gt;Stack[0x6c]  ---&gt; 28 = 6\n        400e42a3 f2 61 14        s32i       a15,a1,0x50=&gt;Stack[0x50] ---&gt; 21 = 7\n        400e42a6 99 81           s32i.n     a9,a1,0x20=&gt;Stack[0x20]  ---&gt; 9 = 6\n        400e42a8 e9 c1           s32i.n     a14,a1,0x30=&gt;Stack[0x30] ---&gt; 13 = 4\n        400e42aa 82 61 1c        s32i       a8,a1,0x70=&gt;Stack[0x70]  ---&gt; 29 = 1\n        400e42ad d9 d1           s32i.n     a13,a1,0x34=&gt;Stack[0x34]  ---&gt; 14 = 9\n        400e42af a2 61 1e        s32i       a10,a1,0x78=&gt;Stack[0x78] ---&gt; 31 = 2\n        400e42b2 99 b1           s32i.n     a9,a1,0x2c=&gt;Stack[0x2c]  ---&gt; 12 = 6\n        400e42b4 c9 91           s32i.n     a12,a1,0x24=&gt;Stack[0x24] ---&gt; 10  = c\n        400e42b6 b2 61 1a        s32i       a11,a1,0x68=&gt;Stack[0x68] ---&gt; 27 = 3\n        400e42b9 0c 08           movi.n     a8 = '0'\n</code></pre>\n</div>\n<h1 id=\"flag\">Flag</h1>\n<p>So, at the end, with all the position in the right order, here is the flag</p>\n<ul>\n<li>Flag = <code>11a922186c46496eb1317c128b361720</code></li>\n</ul>\n<p>We can validate the challenge using the CLI on the badge</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://alrikrr.github.io/media/posts/24/validate.png\" alt=\"\" width=\"685\" height=\"123\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://alrikrr.github.io/media/posts/24/responsive/validate-xs.png 300w ,https://alrikrr.github.io/media/posts/24/responsive/validate-sm.png 480w ,https://alrikrr.github.io/media/posts/24/responsive/validate-md.png 768w\"></figure>",
            "image": "https://alrikrr.github.io/media/posts/24/nsec-Badge.jpg",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Write Up",
                   "BadgeLife"
            ],
            "date_published": "2023-04-07T21:52:00-04:00",
            "date_modified": "2023-09-13T18:52:23-04:00"
        },
        {
            "id": "https://alrikrr.github.io/7-nsec21-reboot/",
            "url": "https://alrikrr.github.io/7-nsec21-reboot/",
            "title": "#7 Nsec21 - Reboot",
            "summary": "I was also lucky on this one. After connecting to the device using the serial port with the screen command:&hellip;",
            "content_html": "<p>I was also lucky on this one.</p>\n<h1 id=\"tty-cli\">tty CLI</h1>\n<p>After connecting to the device using the serial port with the screen command:</p>\n<div class=\"highlight\">\n<pre tabindex=\"0\"><code class=\"language-bash hljs\" data-lang=\"bash\">sudo screen /dev/ttyUSB0 115200\n</code></pre>\n</div>\n<p>If you can´t see your ttyUSB, try using <code>dmesg</code> after connecting the badge on your computer.</p>\n<p><img loading=\"lazy\" src=\"https://alrikrr.github.io/posts/write-up/nsec-2021/7-flag/dmesg.png\" alt=\"dmesg debug\" data-is-external-image=\"true\"></p>\n<p>And also check your <code>/dev/</code> folder</p>\n<p><img loading=\"lazy\" src=\"https://alrikrr.github.io/posts/write-up/nsec-2021/7-flag/ttyUSB0.png\" alt=\"ttyUSB in dev\" data-is-external-image=\"true\"></p>\n<h1 id=\"reboot-\">Reboot !</h1>\n<p>As you can see, behind the badge, there is a reboot button, and I keep pressing it by mistake!</p>\n<p>However, after looking at the terminal, I saw the full message and a small help menu before the shell!</p>\n<p><img loading=\"lazy\" src=\"https://alrikrr.github.io/posts/write-up/nsec-2021/7-flag/tab-reboot.png\" alt=\"Reboot menu\" data-is-external-image=\"true\"></p>\n<p>As you can see, I can use TAB to autocomplete commands. Maybe I need to found a hidden command which is not displayed with <code>help</code> command ?</p>\n<p>After pressing a few keys, I was able to discover the secret command <code>the_sword_of_azeroth!</code></p>\n<p><img loading=\"lazy\" src=\"https://alrikrr.github.io/posts/write-up/nsec-2021/7-flag/letter-t.png\" alt=\"Sword\" data-is-external-image=\"true\"></p>\n<h1 id=\"flag\">Flag</h1>\n<p>Here is the 7th Flag : <code>FLAG-Cl1F0rFun&amp;Pr0f1t</code></p>",
            "image": "https://alrikrr.github.io/media/posts/23/nsec-Badge.jpg",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Write Up",
                   "BadgeLife"
            ],
            "date_published": "2023-04-07T21:49:00-04:00",
            "date_modified": "2023-08-15T21:49:17-04:00"
        },
        {
            "id": "https://alrikrr.github.io/5-nsec21-punk-down/",
            "url": "https://alrikrr.github.io/5-nsec21-punk-down/",
            "title": "#5 Nsec21 - Punk Down",
            "summary": "Okay for this one I don’t have the reference but I managed to found it by accident ! It’s actually&hellip;",
            "content_html": "<p>Okay for this one I don’t have the reference but I managed to found it by accident ! It’s actually the second one I found during my journey.</p>\n<h1 id=\"punk-guy\">Punk Guy</h1>\n<p>I was playing around the place and speak to this Punk Guy right here<br><img loading=\"lazy\" src=\"https://alrikrr.github.io/posts/write-up/nsec-2021/5-flag/flag5.png\" alt=\"Punk Guy\" data-is-external-image=\"true\"></p>\n<p>During the conversation, I found the flag by accident by pressing the Down Button <img loading=\"lazy\" src=\"https://alrikrr.github.io/posts/write-up/nsec-2021/5-flag/punk1.png\" alt=\"Punk Guy\" data-is-external-image=\"true\"></p>\n<p><img loading=\"lazy\" src=\"https://alrikrr.github.io/posts/write-up/nsec-2021/5-flag/punk2.png\" alt=\"Flag 5 \" data-is-external-image=\"true\"></p>\n<h1 id=\"flag-5\">Flag 5</h1>\n<p>The flag is <code>FLAG-KLJV490uhkEJF28</code></p>",
            "image": "https://alrikrr.github.io/media/posts/22/nsec-Badge.jpg",
            "author": {
                "name": "AlrikRr"
            },
            "tags": [
                   "Write Up",
                   "BadgeLife"
            ],
            "date_published": "2023-04-06T21:48:00-04:00",
            "date_modified": "2023-08-15T21:48:30-04:00"
        }
    ]
}
